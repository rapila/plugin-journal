(function() {
	function JournalController(page_id, container, page_type) {
		this.container = container;
		this.page_type = page_type;
	}
	
	jQuery.extend(JournalController.prototype, {
		init: function() {
			var _this = this;
			
			this.form = jQuery('<form/>').append(Widget.parseHTML('{{includeTemplate=edit}}'));
			this.container.append(this.form);

			this.journal_list = this.container.find('select[name="journal_ids"]').prepareWidget(function(journal_input) {
				journal_input._element.change(_this.journal_changed.bind(_this));
			});

			this.page_type.methods.detailWidget(function(session) {
				Widget.create('journal_entry_detail', function(detail) {
					_this.journal_entry_detail = detail;
					_this.journal_entry_detail.save_callback = _this.reload_entries.bind(_this);
					_this.journal_list.ensureWidget(function(journal_input) {
						_this.journal_entry_detail.journal_ids_configured(journal_input.val() || []);
					});
				}, jQuery.noop, session);
			});
			
			// Lists to be filled
			this.container.find('span.edit_journal_button').click(function() {
				_this.edit_journal();
			});
			
			this.template_list = this.container.find('select[name="template_set"]');
			this.widget_list = this.container.find('div.journal-widgets');
			this.widget_list.sortable({
				handle: '.ui-sortable-handle',
				axis: 'y'
			});
			this.container_list = this.container.find('select[name="container"]');
			this.auxiliary_container_list = this.container.find('select[name="auxiliary_container"]');
			
			// Elements used later on
			this.entry_area = this.container.find('div.journal-entries');
			this.name_input = this.container.find('input[name="journal_name"]');
			this.description_input = this.container.find('textarea[name="journal_description"]');
			this.date_navigation_items_visible_checkbox = this.container.find('input[name="date_navigation_items_visible"]');
			this.captcha_enabled_checkbox = this.container.find('input[name="captcha_enabled"]');
			this.add_journal_entry_button = this.container.find('a.add_journal_entry').click(this.add_journal_entry.bind(this)).hide();
			
			//Static value lists
			this.mode_list = this.container.find('select[name="mode"]');
			this.with_comment_active_only = this.container.find('.with_comment_active_only');
			this.comment_mode_list = this.container.find('select[name="comment_mode"]').change(function() {
				_this.with_comment_active_only.css('visibility' , jQuery(this).val() ===  'off' ? 'hidden' : 'visible');
			});
			this.entries_per_page_list = this.container.find('select[name="entries_per_page"]');

			this.reload();
		},
		
		reload: function() {
			var _this = this;
			var waiters = [];
			
			this.container.find('.journal_detail').tabs();
			
			this.journal_ids = null;
			this.page_type.methods.currentJournalIds(function(journal_ids) {
				_this.journal_ids = journal_ids;
				_this.journal_list.ensureWidget(function(journal_input) {
					journal_input.val(journal_ids);
					_this.journal_entry_detail && _this.journal_entry_detail.journal_ids_configured(journal_input.val() || []);
				});
				_this.add_journal_entry_button.show();
			});
			
			this.page_type.methods.listTemplateSets(function(result) {
				_this.template_list.empty().populate(result.options, result.current);
			}.deferred(waiters));
			
			this.page_type.methods.listWidgets(function(result) {
				_this.widget_list.empty();
				var sortable_container = jQuery('<div/>').attr({ style: 'padding:1px;'});
				jQuery.each(result, function(i, widget) {
					var container = sortable_container.clone();
					jQuery('<span/>', {class: 'ui-sortable-handle', style: 'display:inline-block;height:16px;'}).appendTo(container);
					jQuery('<input/>', {type: 'checkbox', name: 'widgets[]', value: widget.name, checked: widget.current}).appendTo(container);
					jQuery('<label/>', {"for": 'widgets[]'}).css({display: 'inline'}).appendTo(container).text(widget.title);
					container.appendTo(_this.widget_list);
				});
			}.deferred(waiters));

			this.page_type.methods.listContainers(function(result) {
				_this.container_list.empty().populate(result.options, result.current);
				_this.auxiliary_container_list.empty().populate(result.options, result.current_auxiliary);
			}.deferred(waiters));
			
			this.page_type.methods.currentOverviewMode(function(result) {
				_this.mode_list.val(result);
			}.deferred(waiters));
			
			this.page_type.methods.dateNavigationItemsVisible(function(hidden) {
				_this.date_navigation_items_visible_checkbox.prop('checked', hidden === '1');
			}.deferred(waiters));
			
			this.page_type.methods.captchaEnabled(function(result) {
				_this.captcha_enabled_checkbox.attr('checked', result);
			}.deferred(waiters));
			
			this.page_type.methods.currentCommentMode(function(result) {
				_this.comment_mode_list.val(result).change();
			}.deferred(waiters));
			
			this.page_type.methods.currentEntriesPerPage(function(result) {
				_this.entries_per_page_list.val(result);
			}.deferred(waiters));

			jQuery.when.apply(jQuery, waiters).then(function() {
				_this.reload_entries();
			});
		},

		add_journal_entry: function() {
			var _this = this;
			if(_this.journal_entry_detail) {
				_this.journal_entry_detail.setJournalEntryId(null);
				_this.journal_entry_detail.fill_data();
				_this.journal_entry_detail.open();
			}
			return false;
		},
		
		edit_journal: function() {
			var _this = this;
			var journal_id = this.journal_list.val();	
			if(journal_id && journal_id.length !== 1) {
				journal_id = null;
			}
			Widget.create('journal_detail', function(widget) {
				if(journal_id) {
					widget.setJournalId(journal_id);
					widget.fill_data();
				}
				widget.open();
				widget.save_callback = function(journal_id) {
					Widget.fire('rapila-journals_changed');
					_this.journal_list.ensureWidget(function(journal_input_widget) {
						journal_input_widget.val(journal_input_widget.val().concat([journal_id]));
					});
				};
			});
		},
		
		journal_changed: function() {
			var _this = this;
			var value = this.journal_list.val() || [];
			_this.journal_entry_detail && _this.journal_entry_detail.journal_ids_configured(value);
			this.page_type.methods.setCurrentJournal(value, function() {
				_this.reload_entries();
			});
		},

		reload_entries: function() {
			var _this = this;
			if(this.entry_list) {
				this.entry_list.reload();
			} else {
				if(!this.journal_entry_detail) {
					return window.setTimeout(arguments.callee.bind(this), 500);
				}
				this.page_type.methods.entryList(function(list) {
					_this.entry_area.html(list);
					_this.entry_area.widgetElements().prepareWidget(function(widget) {
						widget.connected_detail = _this.journal_entry_detail;
					}, function(widget) {
						_this.entry_list = widget;
					});
				});
			}
		},

		save: function() {
			var _this = this;
			this.page_type.methods.saveJournalPageConfiguration(this.form.serializeArrayKV(), function(result, error) {
				if(error) {
					if(error.exception_type === 'ValidationException') {
						Widget.callStatic('detail', 'validate_with', error.parameters, _this.form);
					} else {
						Widget.notifyUser(Widget.logSeverity.ALERT, error.message);
					}
				} else {
					_this.reload();
				}
			});
		}
	});
	
	var init_journal_controls = function(page_id, container, page_type) {
		var controller = new JournalController(page_id, container, page_type);
		controller.init();
		return controller;
	};
	
	Widget.types.page_type.types.journal = function(page_type, page_id, container) {
		this.controller = null;
	};

	jQuery.extend(Widget.types.page_type.types.journal.prototype, {
		handle_preview: function(page_id, page_type) {
			var container = jQuery('<div/>');
			var _this = this;
			var save = jQuery('<button/>').text(window.AdminInterface.translations.okButtonText).button();
			jQuery('#journal_contents').append(container, save);
			this.controller = init_journal_controls(page_id, container, page_type);
			save.click(function() {
				_this.controller.save();
			});
		},

		handle_admin: function(page_id, container, page_type) {
			this.controller = init_journal_controls(page_id, container, page_type);
		},

		did_save: function(page_id, container, page_type) {
			this.controller.save();
		}
	});
})();

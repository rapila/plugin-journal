Widget.types.journal_entry_detail = {
	initialize: function() {
		var _this = this;

		Widget.callStatic('detail', 'set_instance', this);

		this._element = Widget.parseHTML('{{includeTemplate=edit}}');
		this._element.find('div.hide_if_not_saved').hide();

		this.current_detail_id = null;

		this.published_at_input = this._element.find('input[name="publish_at"]');
		this.published_at_input.datepicker({
			dateFormat: _this.settings.date_format
		});
		// disable published_at_input if journal entry is published
		this._element.find('input[name="is_published"]').change(function() {
			_this.published_at_input.prop('disabled', this.checked);
		});

		this._element.find("select[name='journal_id']").prepareWidget(function(journal_input_widget) {
			journal_input_widget.val(_this.settings.initial_journal_id);
		}, jQuery.noop);

		this.journals = this._element.find("select[name='journal_id']").prepareWidget(function(journal_input) {
			_this.journal_input = journal_input;
			journal_input.settings.journal_ids_configured = _this.settings.journal_ids_configured;
		}, jQuery.noop);

		this.comment_row = Widget.parseHTML("{{includeTemplate=comment_row}}");
		this.comment_list = this._element.find('tbody.comments');

		// Tag area
		Widget.createWithElement('tag_area', function(widget) {
			_this.tag_area = widget;
			widget.settings.auto_load = false;
			widget.settings.dnd = false;
			widget.settings.deletable = true;
			widget.setModelName('JournalEntry');
			widget.handle('element_set', function(event, element) {
				_this._element.find('div.tags_in_detail').append(element);
			});
		}, jQuery.noop);

		// Images upload
		this.uploader = Widget.create('file_upload');
		this.no_images_upload_info = jQuery('<div/>').html("{{writeString=wns.journal_entry.no_images_and_upload_info}}").addClass('no_images_placeholder');
		this.droppable_area = this._element.find('.droppable_area');
		this.uploader.allow_drag_to(this.droppable_area, null, function(target, file) {
			return { document_category_id: _this.settings.journal_entry_images_category_id, callback: _this.upload_success.bind(_this), error: _this.upload_error.bind(_this)};
		});
		// Handlers
		this.handle('opened', function() {
			this.droppable_area.sortable({
				update: function(document, ui) {
					var ids = _this.droppable_area.children().map(function() {
						return jQuery(this).data('document_id');
					}).get();
					if(_this.current_detail_id !== null) {
						// only reorder if detail has been saved, otherwise sort order is taken from dom at saving time
						_this.reorderDocuments(ids);
					}
				}
			});
		});
	},

	prepare: function() {
		var _this = this;
		this.published_at_input = this._element.find('input[name="publish_at"]');
		this._element.find('input[name="is_published"]').change(function() {
			_this.published_at_input.prop('disabled', this.checked);
		});
		this.text_widget = this._element.find('.text-widget').attr('data-widget-session', this.settings.richtext_session);
		this.text_widget.prepareWidget(function(text_widget) {
			_this.handle('saving', function(event, data) {
				data.text = text_widget.get_data();
			});
		}.bind(this));
		this.handle('opened', function() {
			if(_this.published_at_input.val() === '') {
				_this.published_at_input.val(_this.settings.date_today);
			}
		});
	},

	fill_data: function() {
		var _this = this;
		this.detail_widget.disable();
		this.loadData(function(data) {
			this.current_detail_id = data.Id;
			this._element.find('input[name="title"]').val(data.Title);
			this._element.find('input[name="is_published"]').prop('checked', data.IsPublished).change();
			this.published_at_input.val(data.PublishAt);
			this._element.find(".updated_info").text(data.UpdatedInfo);
			this._element.find(".created_info").text(data.CreatedInfo);
			this._element.find(".detail_id").text(data.Id);
			this.journals.ensureWidget(function(journal_input) {
				journal_input.val(data.JournalId);
			});

			this.text_widget.ensureWidget(function(widget) {
				widget.set_data(data.Text);
			});

			this.update_comments(data.comments);
			this.update_documents();

			if(data.Id) {
				this.tag_area.setTaggedItemId(data.Id);
				this.tag_area.reload_tags();
			}
			this.detail_widget.set_title(this.detail_widget.settings.title = data.Title);
			this._element.find('div.hide_if_not_saved').show();
			this.detail_widget.enable();
		});
	},

	update_comments: function(comments) {
		var _this = this;
		this.comment_list.empty();
		this._element.find("span.comment_count").text(comments.length);

		if(comments.length === 0) {
			var comment = jQuery('<tr/>').addClass('ui-list-row');
			this.comment_list.append(comment.append(jQuery('<td/>').attr('colspan', 4).text("{{writeString=wns.journal_entry.no_comments}}")));
		}
		jQuery.each(comments, function(i, comment) {
			var comment_row = _this.comment_row.clone();
			var online_checkbox = jQuery('<input/>').attr({ type: 'checkbox', name: 'comment_is_published[]', value : comment.Id }).prop('checked', comment.IsPublished).change(function() {
				_this.toggleCommentIsPublished(comment.Id, function(result) {
					online_checkbox.prop('checked', result === true);
				});
			});
			comment_row.find('td.date').append(comment.CreatedAtFormatted);
			comment_row.find('td.email').append(comment.Email);
			comment_row.find('td.comment').append(comment.Text);
			comment_row.find('td.is_published').append(online_checkbox);
			_this.comment_list.append(comment_row);
		});
	},

	update_documents: function() {
		var _this = this;
		this.droppable_area.empty();
		this.allDocuments(_this.settings.thumbnail_size, function(documents) {
			if(documents.length === 0) {
				_this.droppable_area.append(_this.no_images_upload_info);
			}
			jQuery.each(documents, function(i, document_data) {
				_this.insert_thumbnail(document_data);
			});
			this.update_document_count(documents.count);
		});
	},

	update_document_count: function(count) {
		var count = count || this.droppable_area.find('div.ui-image-picker-image').length;
		this._element.find("span.document_count").text(count);
		return count;
	},

	insert_thumbnail: function(document_data) {
		this.droppable_area.find('div.no_images_placeholder').remove();
		var _this = this;
		var document_id = document_data.Id;
		var px_size = ''+this.settings.thumbnail_size+'px';
		var doc = jQuery('<div/>').addClass('ui-widget ui-widget-content ui-image-picker-image ui-placeholder');
		doc.css({width: px_size, height: px_size});
		doc.data('document_id', document_id);

		jQuery('<span/>').attr('title', "{{writeString=wns.journal_entry.delete_file}}").addClass('ui-icon ui-icon-trash').click(function(event) {
			var delete_message = AdminInterface.strings.get_string('wns.document.delete_warning', { document_name: document_data.Name});
			Widget.confirm("{{writeString=wns.delete_warning_title}}", delete_message, function(confirmed) {
				if(confirmed) {
					_this.deleteDocument( document_id, function(result) {
						jQuery(doc).remove();
						if(_this.update_document_count() === 0) {
							_this.droppable_area.empty().append(_this.no_images_upload_info);
						}
					});
				}
			});
			return false;
		}).appendTo(doc);
		var document_object = Widget.parseHTML(document_data.Preview);
		doc.addClass('pointer').attr('title', '{{writeString=wns.edit_file.dblclick}}').dblclick(function() {
			Widget.create('document_detail', function(widget) {
				widget.settings.is_called_externally = true;
				widget.auto_open = true;
			}, function(widget) {
				widget.setDocumentId(document_id);
				widget.fill_data();
			});
		});
		doc.append(document_object);
		this.droppable_area.append(doc);
	},

	upload_success: function(document_id, options) {
		var _this = this;
		this.addJournalEntryImage(document_id, function() {
			_this.insert_thumbnail(_this.getSingleDocument(document_id, _this.settings.thumbnail_size));
			_this.update_document_count();
		});
	},

	upload_error: function(error) {
	},

	journal_ids_configured: function(journal_ids_configured) {
		this.settings.journal_ids_configured = journal_ids_configured;
		if(this.journal_input) {
			this.journal_input.settings.journal_ids_configured = journal_ids_configured;
			this.journal_input.reload();
		}
	},

	settings: {
		detail_widget: {
			width: 800,
			title: "{{writeString=wns.journal.add_entry}}"
		},
		thumbnail_size: 180,
		initial_journal_id: null,
		journal_ids_configured: null
	}
};
